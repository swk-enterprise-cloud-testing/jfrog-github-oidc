name: "JFrog-GitHub NPM Publish OIDC Integration"
on: push
permissions:
  id-token: write # For signing
  contents: read # For repo checkout.
  actions: read # For getting workflow run info.
jobs:
  build:
   uses: slsa-framework/slsa-github-generator/.github/workflows/builder_nodejs_slsa3.yml@v1.10.0
   with:
     directory: ./package
     rekor-log-public: true
  # run-scripts: "install, test"
     
  publish:
    needs: [build]
    runs-on: ubuntu-latest
    env:
      OIDC_AUDIENCE: 'jfrog-github'
      OIDC_PROVIDER: 'github'
      PLATFORM_REPO: 'eks-npm'
    steps:
      - name: Setup Node
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3.7.0
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"
          
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Download tarball
        uses: slsa-framework/slsa-github-generator/actions/nodejs/secure-package-download@v1.10.0
        with:
          name: ${{ needs.build.outputs.package-download-name }}
          path: ${{ needs.build.outputs.package-name }}
          sha256: ${{ needs.build.outputs.package-download-sha256 }}

      - name: Download provenance
        uses: slsa-framework/slsa-github-generator/actions/nodejs/secure-attestations-download@v1.10.0
        with:
          name: ${{ needs.build.outputs.provenance-download-name }}
          path: "attestations"
          sha256: ${{ needs.build.outputs.provenance-download-sha256 }}
                     
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        env:  
          JF_URL: ${{ secrets.JF_URL }}
        with:
           oidc-provider-name: ${{ env.OIDC_PROVIDER }}
           oidc-audience: ${{ env.OIDC_AUDIENCE }}
           
      - name: Set CLI Config
        run: jf npm-config --global=true --repo-resolve=$PLATFORM_REPO --repo-deploy=$PLATFORM_REPO
         
      # - name: Publish
      #   run: jf npm publish
      
      - name: Publish the package
        env:
          TARBALL_PATH: "../${{ needs.build.outputs.package-name }}"
          JFROG_CLI_LOG_LEVEL: "DEBUG"
          PROVENANCE_PATH: "../attestations/${{ needs.build.outputs.provenance-download-name }}"
        run: |
          curl -u swarnendukayal@github.com:${{ secrets.JF_TOKEN }} "https://swktest.jfrog.io/artifactory/api/npm/eks-npm-local/auth/jfrog" > .npmrc
          cat .npmrc
          cd package
          ls
          jf npm publish "${TARBALL_PATH}" --access=public --provenance-file="${PROVENANCE_PATH}/jfrog-npm-example-1.0.0.build.slsa" --build-name=integration-project --build-number=${{ github.run_id }}
          jf rt bp integration-project ${{ github.run_id }}
          env:
            JFROG_CLI_COMMAND_SUMMARY_OUTPUT_DIR: ${{ github.workspace }}/command-summary
